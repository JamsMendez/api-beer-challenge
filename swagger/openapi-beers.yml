openapi: 3.0.3
info:
  title: Swagger API Beers - Version 1.0
  description: |-
    API Beers challenge
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:3000/api
tags:
  - name: Beers
    description: API list of beers
paths:
  /beers/:
    post:
      tags:
        - beers
      summary: Add a new beer to the store
      description: Add a new beer to the store
      operationId: addBeer
      requestBody:
        description: Create a new beer in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeerNew'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '405':
          description: Invalid input
  /beers:
    get:
      tags:
        - beers
      summary: Get list beers
      description: Get list beers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Beer'
        '400':
          description: Invalid status value
  /beers/{id}:
    get:
      tags:
        - beers
      summary: Get beer by id
      description: Find one beer the store by id.
      operationId: id
      parameters:
        - name: id
          in: path
          description: ID of beer to return
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Beer'
        '400':
          description: Invalid tag value
  /beers/{beerID}/boxprice:
    get:
      tags:
        - beers
      summary: Get boxprice beer by ID, currency and quantity
      description: Return boxprice of beer by ID and currency and quantity
      operationId: getPetById
      parameters:
        - name: beerID
          in: path
          description: ID of beer to return
          required: true
          schema:
            type: integer
            format: uint64
            example: 3
        - name: currency
          in: query
          description: currency to convert
          required: true
          schema:
            type: string
            example: USD
        - name: quantity
          in: query
          description: quantity of pricebox
          required: false
          schema:
            type: integer
            format: uint64
            default: 6
            example: 12 
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Beer'
        '400':
          description: Invalid ID supplied
        '404':
          description: Beer not found
components:
  schemas:
    Beer:
      type: object
      required:
        - id
        - name
        - brewery
        - country
        - currency
        - price
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          format: uint64
          example: 10
        name:
          type: string
          example: Corona
        brewery:
          type: string
          example: Modelo
        country:
          type: string
          example: Mexico
        currency:
          type: string
          example: MXN
        price:
          type: number
          format: float
          example: 25.00
        created_at:
          type: string
          example: '2023-04-05 00:00:00'
        updated_at:
          type: string
          example: '2023-04-05 00:00:00'
    BeerNew:
      type: object
      required:
        - name
        - brewery
        - country
        - currency
        - price
      properties:
        name:
          type: string
          example: Corona
        brewery:
          type: string
          example: Modelo
        country:
          type: string
          example: Mexico
        currency:
          type: string
          example: MXN
        price:
          type: number
          format: float
          example: 25.00
